#!/bin/bash -vx

if test -f config.custom ; then
	. config.custom
else
	. config
fi

if test -n "$TOOLCHAIN_DIR" -a -d "$TOOLCHAIN_DIR"; then
    PATH=$TOOLCHAIN_DIR/bin:$PATH
fi

if test -n "$CROSS_COMPILE" ; then
    cross="--build=$(e2fsprogs-libs/config/config.guess) --host=$CROSS_COMPILE"
    crossfio="--cc=$CROSS_COMPILE-gcc"
fi

case "$CROSS_COMPILE" in
    *-android|*-androideabi)
	DO_ANDROID=yes
	;;
esac

nr_cpus=$(getconf _NPROCESSORS_ONLN)
J=-j$(expr $nr_cpus \* 2)

DESTDIR=$(pwd)/bld

mkdir -p $DESTDIR

if test -n "$DO_ANDROID" ; then
    (cd android-compat; ./configure $cross ;  make $J prefix=$DESTDIR install)
    android_compat="-landroid_compat"
    LCF="-fpie -include android_compat.h"
    LLF="-pie"
fi

(cd e2fsprogs-libs; \
    CFLAGS="$LCF -I$DESTDIR/include" \
    LDFLAGS="$LLF -static -L$DESTDIR/lib" \
    ./configure $cross --prefix=/ --disable-nls; make $J; make DESTDIR=$DESTDIR $J install)

(cd attr; \
    CFLAGS="$LCF -I$DESTDIR/include" \
    LDFLAGS="$LLF -static -L$DESTDIR/lib" \
    ./configure $cross --prefix=$DESTDIR --disable-nls; \
    make $J ; \
    make $J install-dev ; make install)

(cd acl; \
    CPPFLAGS="-I$DESTDIR/include" \
    CFLAGS="$LCF -I$DESTDIR/include" \
    LDFLAGS="$LLF -static -L$DESTDIR/lib" \
    ./configure $cross --prefix=$DESTDIR --disable-nls; \
    make $J LLDFLAGS=-all-static LIBTOOL="/usr/bin/libtool --tag=CC" ; \
    make $J install-dev ; \
    make $J install)

(cd libaio; ./configure $cross --disable-nls;  make $J prefix=$DESTDIR install)

rm $DESTDIR/lib/libaio.so*

(cd xfsprogs-dev; make $J realclean ; make $J configure ; \
    ver=$(git describe --always --dirty); echo "xfsprogs	$ver ($(git log -1 --pretty=%cD))" > ../xfsprogs.ver ; \
    CFLAGS="$LCF -I$DESTDIR/include" \
    CPPFLAGS="-I$DESTDIR/include" \
    LDFLAGS="$LLF -static -L$DESTDIR/lib" \
    LIBS=-lpthread \
    ./configure $cross --prefix=/ --disable-lib64 --disable-gettext ; \
    make $J LLDFLAGS=-all-static V=1 PLDLIBS="$android_compat" ; \
    DIST_ROOT=$DESTDIR make $J install; \
    DIST_ROOT=$DESTDIR make $J install-dev)

find . -name \*.la | xargs rm -f      # Die, libtool, die!!!!

#
# We don't support building fio for Android, and there is an old
# version of fio in external/fio in AOSP, so we'll leave it be for
# now.
# 
if test -z "$DO_ANDROID"; then
    (cd fio; \
     ver=$(git describe --always --dirty); echo "fio		$ver ($(git log -1 --pretty=%cD))" > ../fio.ver ; \
     export CFLAGS="$LCF -I$DESTDIR/include" ; \
     export LDFLAGS="$LLF $EXEC_LDFLAGS -L$DESTDIR/lib" ; \
     ./configure $crossfio --extra-cflags="$CFLAGS"; make V=1 prefix=/ $J; make prefix=/ V=1 DESTDIR=$DESTDIR $J install)
fi

(cd xfstests-dev; \
    ver=$(git describe --always --dirty); echo "xfstests	$ver ($(git log -1 --pretty=%cD))" > ../xfstests.ver ; \
    autoheader ; autoconf ; \
    CFLAGS="$LCF -I$DESTDIR/include -fno-stack-protector" \
    CPPFLAGS="-I$DESTDIR/include" \
    LDFLAGS="$LLF -static -L$DESTDIR/lib" \
    LIBS=-lpthread \
    ./configure $cross ; \
    make $J LLDFLAGS=$EXEC_LLDFLAGS PLDLIBS="$android_compat" LIBTOOL="/usr/bin/libtool --tag=CC" BUILD_VERBOSE=1)

#
# Hack around quota's lack of cross compilation support
#
if ! grep -q "@CC@" quota/Makefile.in ; then
   echo "No @CC@"
   ed quota/Makefile.in <<EOF
1i
CC	      = @CC@
.
w
q
EOF
fi

#
# We haven't gotten quota working on android yet.  Shrug.
#
if test -z "$DO_ANDROID"; then
    (cd quota; \
     ver=$(git describe --always --dirty); echo "quota		$ver ($(git log -1 --pretty=%cD))" > ../quota.ver ; \
     export CFLAGS="$LCF -I$DESTDIR/include" ; \
     export LDFLAGS="$LLF $EXEC_LDFLAGS -L$DESTDIR/lib $EXEC_LDFLAGS" ; \
     export CPPFLAGS="-I$DESTDIR/include" ; \
     aclocal ; autoconf ; \
     ./configure $cross --enable-ext2direct=no --prefix=$DESTDIR ; \
     make V=1 $J; make V=1 $J install)
fi

(cd misc ; ./configure $cross ; make $J ; make install DESTDIR=$DESTDIR)
