#!/bin/bash

DIR=.
if test -n "$KVM_XFSTESTS_DIR"
then
    DIR="$KVM_XFSTESTS_DIR"
fi

. $DIR/config

QUIET="quiet loglevel=0"

. $DIR/util/parse_cli

if ! test -f "$KERNEL"; then
     echo "$KERNEL: kernel not found"
     exit 1
fi

if test -z "$DO_NET" ; then
   echo "Networking disabled."
   NET="-net none "
elif test $(whoami) = "root" ; then
  NET="-net nic,model=virtio -net tap,script=$IFUP,downscript=$IFDOWN "
else
  NET="-netdev user,id=mynet0,net=172.20.0.0/24 -device virtio-net,netdev=mynet0 "
fi

#EXTRA_ARG="virtio_blk.queue_depth=32"

if test -n "$SKIP_LOG" ; then
    LOGFILE=/tmp/log.$(date +%Y%m%d%H%M)
else
    LOGFILE=$DIR/log.$(date +%Y%m%d%H%M)
fi

modprobe kvm-intel

if ! test -e $VDB -a -e $VDC -a -e $VDD -a -e $VDE -a -e $VDF -a -e $VDG
then
	echo "Test disks don't exist, running setup..."
	$DIR/setup
fi

if ionice -h > /dev/null ; then
    IONICE="ionice -n 5"
fi

$NO_ACTION $IONICE $QEMU -boot order=c $NET \
	-drive file=$ROOT_FS,if=virtio$SNAPSHOT \
	-drive file=$VDB,cache=none,if=virtio \
	-drive file=$VDC,cache=none,if=virtio \
	-drive file=$VDD,cache=none,if=virtio \
	-drive file=$VDE,cache=none,if=virtio \
	-drive file=$VDF,cache=none,if=virtio \
	-drive file=$VDG,cache=none,if=virtio \
	-nographic -smp $NR_CPU -m $MEM \
        $CONSOLE \
        $MONITOR \
        $SERIAL \
        $GDB \
	--kernel $KERNEL \
	--append "$QUIET root=$ROOT_DEV console=ttyS0,115200 $ARG $EXTRA_ARG" |\
tee $LOGFILE

$DIR/get-results $LOGFILE

if test -n "$SKIP_LOG" ; then
  rm $LOGFILE
else
  echo "logfile in $LOGFILE"
fi
