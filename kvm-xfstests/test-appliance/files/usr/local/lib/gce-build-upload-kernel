#!/bin/bash
set -vx
# This script is used by KCS server to build and upload kernels.
# If repository REPO_ID exists, it pulls and checkouts to COMMIT.
# Environment variables can be set:
# REPO_DIR GS_BUCKET GS_PATH GS_CONFIG KCONFIG_OPTS

function install_kconfig () {
    if test -z "$KCONFIG_OPTS" ; then
	gce-xfstests install-kconfig || exit 1
    else
	local array=($(echo $KCONFIG_OPTS | sed -e 's/,/ /g'))

	gce-xfstests install-kconfig "${array[@]}" || exit 1
    fi
}

if command -v ccache &> /dev/null /cache/ccache ; then
    export PATH="/usr/lib/ccache:$PATH"
    export CCACHE_DIR=/cache/ccache
fi

if test -z "$REPO_DIR"; then
    REPO_DIR="."
fi

if test -z "$GS_PATH"; then
    GS_PATH="gs://$GS_BUCKET/bzImage"
fi

if test -n "$GS_CONFIG" ; then
    if gsutil cp "$GS_CONFIG" "$REPO_DIR/.config" ; then
	if test $(du -k "$REPO_DIR/.config") -gt 16 ; then
	    make oldconfig || exit 1
	else
	    make olddefconfig || exit 1
	fi
    else
	install_kconfig
    fi
else
    install_kconfig
fi
KERNEL_PATH="$REPO_DIR/arch/x86/boot/bzImage"
DPKG_FLAGS=
if [[ $GS_PATH == *.deb ]]; then
    DPKG_FLAGS=--dpkg
    KERNEL_PATH="$REPO_DIR/linux-image.deb"
fi

status=1
trap "rm -f /run/kernel-building; exit \$status" EXIT HUP INT QUIT TERM
touch "$REPO_DIR/last-used" "$REPO_DIR/last-touched" /run/kernel-building
(cd "$REPO_DIR" ; time gce-xfstests kbuild $DPKG_FLAGS) || exit 1
status=0
rm -f /run/kernel-building
gsutil cp "$KERNEL_PATH" $GS_PATH
