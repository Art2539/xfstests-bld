#!/bin/bash

DEST=/pub/linux/kernel/people/tytso/kvm-xfstests
FILES=( README \
	   root_fs.img.amd64 \
	   root_fs.img.i386 \
	   root_fs.arm64.tar.gz \
	   root_fs.armhf.tar.gz )
	   
function usage()
{
    echo "Usage: upload-to-korg: [--testing]"
    exit 1
}

while [ "$1" != "" ]; do
    case $1 in
	--testing)
	    DEST=/pub/linux/kernel/people/tytso/kvm-xfstests/testing
	    ;;
	*)
	    usage
	    exit 1
	    ;;
    esac
    shift
done

ls -sl out_dir

printf "\nPausing to verify..."
sleep 1
printf "\n"

function sign_file()
{
    local fn=out_dir/$1
    local tar_fn

    rm -f "$fn.sig"
    if test -f $fn ; then
	case "$fn" in
	    *.tar.gz)
		tar_fn=$(basename "$fn")
		tar_fn=$(echo "$tar_fn" | sed -e 's/.gz//')
		echo $tar_fn
		gunzip < $fn > /tmp/$tar_fn
		rm -f "/tmp/$tar_fn.sig"
		gpg2 --sign --detach /tmp/$tar_fn
		mv /tmp/$tar_fn.sig $fn.sig
		rm -f /tmp/$tar_fn
		;;
	    *)
		gpg2 --sign --detach $fn
	esac
    fi
}

function upload_file()
{
    local fn=out_dir/$1

    if test -f $fn ; then
	kup put $fn $fn.sig  $DEST/$i
    else
	kup rm $DEST/$i
    fi
}

sign_file root_fs.arm64.tar.gz
upload_file root_fs.arm64.tar.gz

exit 0

for i in "${FILES[@]}" ; do
#    sign_file $i
    echo $i
done

for i in "${FILES[@]}" ; do
    upload_file $i
done

exit 0


/bin/rm -f $README.sig
gpg2 --sign --detach $README

/bin/rm -f $DIR_32/root_fs.img.i386.sig $DIR_32/root_fs.img.i386
cp $DIR_32/root_fs.img $DIR_32/root_fs.img.i386
gpg2 --sign --detach $DIR_32/root_fs.img.i386

/bin/rm -f $DIR_64/root_fs.img.x86_64.sig $DIR_64/root_fs.img.x86_64
cp $DIR_64/root_fs.img $DIR_64/root_fs.img.x86_64
gpg2 --sign --detach $DIR_64/root_fs.img.x86_64

/bin/rm -f $DIR_ARMHF/root_fs.armhf.tar.gz.sig $DIR_ARMHF/root_fs.armhf.tar.gz
cp $DIR_ARMHF/root_fs.tar.gz $DIR_ARMHF/root_fs.armhf.tar.gz
gunzip < $DIR_ARMHF/root_fs.armhf.tar.gz > /tmp/armhf_root_fs.tar
gpg2 --sign --detach /tmp/armhf_root_fs.tar
mv /tmp/armhf_root_fs.tar.sig $DIR_ARMHF/root_fs.armhf.tar.sig

gpg2 --sign --detach $DIR_ARMHF/root_fs.armhf.tar.gz

kup put $README $README.sig  $DEST/README
kup put $DIR_32/root_fs.img.i386 $DIR_32/root_fs.img.i386.sig   $DEST/root_fs.img.i386
kup put $DIR_64/root_fs.img.x86_64 $DIR_64/root_fs.img.x86_64.sig   $DEST/root_f
s.img.x86_64
kup put $DIR_ARMHF/root_fs.armhf.tar.gz $DIR_ARMHF/root_fs.armhf.tar.sig   $DEST/armhf_root_fs.tar.gz
