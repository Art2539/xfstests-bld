#!/bin/bash

. build_config.sh

function usage()
{
    echo "Usage: build-all-arches: [--readme-only]"
    exit 1
}

while [ "$1" != "" ]; do
    case $1 in
	--readme-only)
	    README_ONLY=yes
	    ;;
	*)
	    usage
	    exit 1
	    ;;
    esac
    shift
done

ARCH_LIST_PRESENT=()

for i in "${ARCH_LIST[@]}" ; do
    if test -d "build-$i" ; then
	ARCH_LIST_PRESENT+=($i)
    fi
done

ARCH_LIST=(${ARCH_LIST_PRESENT[@]})

if test ${#ARCH_LIST[@]} -eq 0 ; then
    echo "No build directories found!"
    exit 1
fi

if ! ./test-versions ; then
   exit 1
fi

mkdir -p out_dir

first_arch="${ARCH_LIST[0]}"
first_dir="build-$first_arch"

release=$(cd $first_dir/xfstests-dev ; git tag --points-at HEAD | grep ^release)

sed -e "s;@MIRROR@;$MIRROR;" \
	-e "s/@XFSTESTS_RELEASE@/$release/" \
	-e "/@VERFILE@/r git-versions-$first_arch" \
	< README.in | sed -e '/^@VERFILE@$/d' > out_dir/README

if test "$README_ONLY" = "yes" ; then
    exit 0
fi

date
for i in "${ARCH_LIST[@]}" ; do
    dir="build-$i"
    if ! test -d $dir ; then
	echo "Skipping $i"
	continue
    fi
    echo "----------------- $(date '+%Y-%m-%d %H:%M:%S'): Starting $i"
    date
    if ! (cd $dir ; ./do-all) ; then
	echo "Build of $i failed!"
	exit 1
    fi
    egrep -v "^(stress-ng)|(keyutils)|(syzkaller)" $dir/xfstests/git-versions > git-versions-$i
    if ! diff git-versions-"${ARCH_LIST[0]}" git-versions-$i
    then
	echo "WARNING: differences in versions detected: $i"
	exit 1
    fi
    case $i in
	arm*)
	    fn=root_fs.tar.gz
	    artifact=root_fs.$i.tar.gz
	    ;;
	*)
	    fn=root_fs.img
	    artifact=root_fs.img.$i
	    ;;
    esac
    cp $dir/kvm-xfstests/test-appliance/$fn out_dir/$artifact
    cp $dir/xfstests.tar.gz out_dir/xfstests-$i.tar.gz
    cp $dir/xfstests/git-versions out_dir/git-versions-$i
done

echo "----------------- $(date '+%Y-%m-%d %H:%M:%S'): Finished"
